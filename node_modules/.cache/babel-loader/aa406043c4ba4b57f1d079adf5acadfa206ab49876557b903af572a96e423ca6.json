{"ast":null,"code":"var _jsxFileName = \"/Users/vivek/Outdid/EvAdmin/frontend/src/superadmin/page/AlertContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// AlertContext.jsx\n\nimport React, { createContext, useState, useContext } from 'react';\nimport { Alert } from '@mui/material';\n\n// Create the alert context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertContext = /*#__PURE__*/createContext();\nexport const AlertProvider = ({\n  children\n}) => {\n  _s();\n  const [alert, setAlert] = useState({\n    text: '',\n    type: ''\n  });\n  const showAlert = (text, type) => {\n    setAlert({\n      text,\n      type\n    });\n    setTimeout(() => setAlert({\n      text: '',\n      type: ''\n    }), 3000); // Clear after 3 seconds\n  };\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      alert,\n      showAlert\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertProvider, \"TIFQy2VGEivHAlduQ0s2xCCYouU=\");\n_c = AlertProvider;\nexport const useAlert = () => {\n  _s2();\n  const context = useContext(AlertContext);\n  if (!context) {\n    throw new Error('useAlert must be used within an AlertProvider');\n  }\n  return context;\n};\n\n// AlertPopup component\n_s2(useAlert, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AlertPopup = () => {\n  _s3();\n  const {\n    alert\n  } = useAlert();\n  if (alert.text && alert.type) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: alert.type,\n      sx: {\n        position: 'fixed',\n        top: '10px',\n        right: '10px',\n        zIndex: 10\n      },\n      children: alert.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_s3(AlertPopup, \"IO8i5xUBigcw5f8r+YbkRTGfwl0=\", false, function () {\n  return [useAlert];\n});\n_c2 = AlertPopup;\nvar _c, _c2;\n$RefreshReg$(_c, \"AlertProvider\");\n$RefreshReg$(_c2, \"AlertPopup\");","map":{"version":3,"names":["React","createContext","useState","useContext","Alert","jsxDEV","_jsxDEV","AlertContext","AlertProvider","children","_s","alert","setAlert","text","type","showAlert","setTimeout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAlert","_s2","context","Error","AlertPopup","_s3","severity","sx","position","top","right","zIndex","_c2","$RefreshReg$"],"sources":["/Users/vivek/Outdid/EvAdmin/frontend/src/superadmin/page/AlertContext.jsx"],"sourcesContent":["// AlertContext.jsx\n\nimport React, { createContext, useState, useContext } from 'react';\nimport { Alert } from '@mui/material';\n\n// Create the alert context\nconst AlertContext = createContext();\n\nexport const AlertProvider = ({ children }) => {\n  const [alert, setAlert] = useState({ text: '', type: '' });\n\n  const showAlert = (text, type) => {\n    setAlert({ text, type });\n    setTimeout(() => setAlert({ text: '', type: '' }), 3000); // Clear after 3 seconds\n  };\n\n  return (\n    <AlertContext.Provider value={{ alert, showAlert }}>\n      {children}\n    </AlertContext.Provider>\n  );\n};\n\nexport const useAlert = () => {\n  const context = useContext(AlertContext);\n  if (!context) {\n    throw new Error('useAlert must be used within an AlertProvider');\n  }\n  return context;\n};\n\n// AlertPopup component\nexport const AlertPopup = () => {\n  const { alert } = useAlert();\n\n  if (alert.text && alert.type) {\n    return (\n      <Alert\n        severity={alert.type}\n        sx={{ position: 'fixed', top: '10px', right: '10px', zIndex: 10 }}\n      >\n        {alert.text}\n      </Alert>\n    );\n  }\n  return null;\n};\n"],"mappings":";;;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,KAAK,QAAQ,eAAe;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IAAEW,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAE1D,MAAMC,SAAS,GAAGA,CAACF,IAAI,EAAEC,IAAI,KAAK;IAChCF,QAAQ,CAAC;MAAEC,IAAI;MAAEC;IAAK,CAAC,CAAC;IACxBE,UAAU,CAAC,MAAMJ,QAAQ,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,oBACER,OAAA,CAACC,YAAY,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEP,KAAK;MAAEI;IAAU,CAAE;IAAAN,QAAA,EAChDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACZ,EAAA,CAbWF,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAe1B,OAAO,MAAMgB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGvB,UAAU,CAACI,YAAY,CAAC;EACxC,IAAI,CAACmB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,GAAA,CARaD,QAAQ;AASrB,OAAO,MAAMI,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,MAAM;IAAElB;EAAM,CAAC,GAAGa,QAAQ,CAAC,CAAC;EAE5B,IAAIb,KAAK,CAACE,IAAI,IAAIF,KAAK,CAACG,IAAI,EAAE;IAC5B,oBACER,OAAA,CAACF,KAAK;MACJ0B,QAAQ,EAAEnB,KAAK,CAACG,IAAK;MACrBiB,EAAE,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,GAAG,EAAE,MAAM;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAA1B,QAAA,EAEjEE,KAAK,CAACE;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEZ;EACA,OAAO,IAAI;AACb,CAAC;AAACO,GAAA,CAdWD,UAAU;EAAA,QACHJ,QAAQ;AAAA;AAAAY,GAAA,GADfR,UAAU;AAAA,IAAAL,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}